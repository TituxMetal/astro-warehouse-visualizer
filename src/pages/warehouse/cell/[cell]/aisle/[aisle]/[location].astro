---
// src/pages/warehouse/cell/[cell]/aisle/[aisle]/[location].astro
import { ViewTransitions } from 'astro:transitions'
import { Breadcrumb } from '~/components/Breadcrumb'
import { WarehouseSelector } from '~/components/WarehouseSelector'
import { WarehouseVisualization } from '~/components/WarehouseVisualization'
import BaseLayout from '~/layouts/BaseLayout.astro'
import type { FullLocation } from '~/types/warehouse'
import { formatAddress, getCellConfig, isValidPosition, parseLocation } from '~/utils/warehouse'

export const prerender = false

const { cell, aisle, location } = Astro.params

// Validate cell, aisle, and location format
if (!cell || !aisle || !location) {
  return Astro.redirect('/warehouse')
}

const cellNumber = parseInt(cell)
const aisleNumber = parseInt(aisle)
const cellConfig = getCellConfig(cellNumber)

if (!cellConfig) {
  return Astro.redirect('/warehouse')
}

// Parse location and validate position
const parsedLocation = parseLocation(location)
if (!parsedLocation || !isValidPosition(parsedLocation.position, cellConfig)) {
  return Astro.redirect('/warehouse')
}

const fullLocation: FullLocation = {
  cell: cellNumber,
  aisle: aisleNumber,
  ...parsedLocation
}

const formattedAddress = formatAddress(fullLocation)
---

<BaseLayout title='Warehouse Visualization'>
  <ViewTransitions />

  <main class='container mx-auto px-4 py-8'>
    <Breadcrumb
      cell={fullLocation.cell}
      aisle={fullLocation.aisle}
      showLocation={true}
      client:load
    />

    <h1 class='mb-8 text-3xl font-bold'>Warehouse Location Visualizer</h1>

    <div class='mb-6'>
      <WarehouseSelector client:load address={formattedAddress} />
    </div>

    <WarehouseVisualization fullLocation={fullLocation} client:load />
  </main>
</BaseLayout>
